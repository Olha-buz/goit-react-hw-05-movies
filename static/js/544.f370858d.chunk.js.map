{"version":3,"file":"static/js/544.f370858d.chunk.js","mappings":"uOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAI3B,OAHKL,EAAS,CACXM,QAASZ,EACTa,KAAM,GACTJ,EAAAE,KAAA,EACsBZ,EAAAA,EAAAA,IAAU,sBAAuB,CAAEO,OAAAA,IAAU,KAAD,EAAvD,OAAuDC,EAAAE,EAAAK,KAA3DN,EAAID,EAAJC,KAAIC,EAAAM,OAAA,SACLP,EAAKQ,SAAO,wBAAAP,EAAAQ,OAAA,GAAAZ,EAAA,KACtB,kBAP4B,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAShBC,EAAgB,eAAAC,GAAAlB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkB,EAAMC,GAAK,IAAAjB,EAAAkB,EAAAhB,EAAA,OAAAJ,IAAAA,MAAA,SAAAqB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OAKtC,OAJKL,EAAS,CACXM,QAASZ,EACTa,KAAM,EACNU,MAAAA,GACHE,EAAAd,KAAA,EACsBZ,EAAAA,EAAAA,IAAU,gBAAiB,CAAEO,OAAAA,IAAU,KAAD,EAAjD,OAAiDkB,EAAAC,EAAAX,KAArDN,EAAIgB,EAAJhB,KAAIiB,EAAAV,OAAA,SACLP,EAAKQ,QAAQU,QAAO,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,cAAcC,SAASP,EAAMM,cAAc,KAAC,wBAAAJ,EAAAR,OAAA,GAAAK,EAAA,KAC/F,gBAR4BS,GAAA,OAAAV,EAAAH,MAAA,KAAAC,UAAA,I,oFCXhBa,EAAY,SAAH9B,GAAoB,IAAd+B,EAAM/B,EAAN+B,OAClBC,GAAWC,EAAAA,EAAAA,MACjB,OACIC,EAAAA,EAAAA,KAAA,MAAAC,SACKJ,EAAOK,OAAS,GAAKL,EAAOM,KAAI,SAAAlB,GAAoB,IAAjBmB,EAAEnB,EAAFmB,GAAIZ,EAAKP,EAALO,MACpC,OACIQ,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,GAAMI,MAAO,CAAEC,KAAMX,GAAWG,SAChDT,KAFAY,EAMjB,KAGZ,C,8ECGA,UAjBa,WACX,IAAAM,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCb,EAAMe,EAAA,GAAEE,EAASF,EAAA,GAQxB,OANAG,EAAAA,EAAAA,YAAU,YACRlD,EAAAA,EAAAA,MACGmD,MAAK,SAAAC,GAAQ,OAAIH,EAAUG,EAAS,IACpCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAQ,GAC9C,GAAG,KAGDC,EAAAA,EAAAA,MAAA,OAAAtB,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAAC,SAAO,oBACNJ,EAAOK,SAAUF,EAAAA,EAAAA,KAACJ,EAAAA,EAAS,CAACC,OAAQA,MAG3C,C","sources":["api/api.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3a86e3da3e452faa5b0083627dadb2c7';\n\nexport const fetchGetTranding = async () => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n    };\n    const { data } = await axios.get('/trending/movie/day', { params });\n    return data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n        query,\n    };\n    const { data } = await axios.get('/search/movie', { params });\n    return data.results.filter(movie => movie.title.toLowerCase().includes(query.toLowerCase()));\n};\n\nexport const fetchMovieId = async movieId => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n    };\n    const { data } = await axios.get(`/movie/${movieId}`, { params });\n    return data;\n};\n\nexport const fetchCast = async movieId => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n        language: 'en-US',\n    };\n    \n    try {\n        const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n        return data;\n    } catch (error) {\n        console.error(error.message);\n    }\n};\n\nexport const fetchReviews = async movieId => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n        language: 'en-US',\n    };\n    const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n    return data.results;\n};\n","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <ul>\n            {movies.length > 0 && movies.map(({ id, title }) => {\n                return (\n                    <li key={id}>\n                        <Link to={`/movies/${id}`} state={{ from: location }}>\n                            {title}\n                        </Link>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};","import { fetchGetTranding } from 'api/api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport React, { useEffect, useState } from 'react';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  \n  useEffect(() => {\n    fetchGetTranding()\n      .then(responce => setMovies(responce))\n      .catch(error => console.log(error.message))\n  }, []);\n\n  return (\n    <div>\n      <title>Trending movies</title>\n      {movies.length && <MovieList movies={movies}/>}\n    </div>\n  )\n}\n\nexport default Home;"],"names":["axios","API_KEY","fetchGetTranding","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","params","_yield$axios$get","data","_context","prev","next","api_key","page","sent","abrupt","results","stop","apply","arguments","fetchSearchMovie","_ref2","_callee2","query","_yield$axios$get2","_context2","filter","movie","title","toLowerCase","includes","_x","MovieList","movies","location","useLocation","_jsx","children","length","map","id","Link","to","concat","state","from","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","then","responce","catch","error","console","log","message","_jsxs"],"sourceRoot":""}