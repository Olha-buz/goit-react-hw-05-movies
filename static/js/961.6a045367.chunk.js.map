{"version":3,"file":"static/js/961.6a045367.chunk.js","mappings":"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","sources":["api/api.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3a86e3da3e452faa5b0083627dadb2c7';\n\nexport const fetchGetTranding = async () => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n    };\n    const { data } = await axios.get(`${baseURL}trending/movie/day`, { params });\n    return data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n        query,\n    };\n    const { data } = await axios.get(`${baseURL}search/movie`, { params });\n    return data.results.filter(movie => movie.title.toLowerCase().includes(query.toLowerCase()));\n};\n\nexport const fetchMovieId = async movieId => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n    };\n    const { data } = await axios.get(`${baseURL}movie/${movieId}`, { params });\n    return data;\n};\n\nexport const fetchCast = async movieId => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n        language: 'en-US',\n    };\n    \n    try {\n        const { data } = await axios.get(`${baseURL}movie/${movieId}/credits`, { params });\n        return data;\n    } catch (error) {\n        console.error(error.message);\n    }\n};\n\nexport const fetchReviews = async movieId => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n        language: 'en-US',\n    };\n    const { data } = await axios.get(`${baseURL}movie/${movieId}/reviews`, { params });\n    return data.results;\n};\n","const { fetchMovieId } = require(\"api/api\");\nconst { useState, useRef, useEffect } = require(\"react\");\nconst { useLocation, useParams, Link, Outlet } = require(\"react-router-dom\");\n\nexport const MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n    const { movieId } = useParams();\n    const linkRef = useRef(location.state?.from ?? '/movies');\n\n    useEffect(() => {\n        fetchMovieId(movieId)\n            .then(movie => setMovie(movie))\n            .catch(error => {\n                console.log(error.message);\n                setMovie([]);\n            })\n    }, [movieId]);\n\n    // if (!movie) return;\n\n    function countUserScore() {\n        const average = movie.vote_average;\n        const userScore = Math.round(average * 10).toFixed(0) + '%';\n        return userScore;\n    };\n\n    const release = new Date(movie.release_date).getFullYear();\n    const { genres } = movie;\n\n\n    return (\n        <div>\n            <button className='backbtn' to={linkRef.current}>Go back</button>\n            <div className='movieInfo'>\n                <img src={movie.poster_path} alt={movie.title} />\n                <div className='intoText'>\n                    <h2>{movie.title} ({release ? release : movie.status})</h2>\n                    <p>User Score: {countUserScore}</p>\n                    <h3>Overview </h3>\n                    <p>{movie.overview}</p>\n                    <h3>Genres</h3>\n                    <p>{genres && genres.map(genre => genre.name).join(' ')}</p>\n                </div>\n            </div>\n            <div className='additional'>\n                <p>Additional information</p>\n                <ul>\n                    <li>\n                        <Link to=\"cast\">\n                            Cast\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"reviews\">\n                            Reviews\n                        </Link>\n                    </li>\n                </ul>\n                <Outlet />\n            </div>\n            \n        </div>\n    )\n};\n"],"names":["baseURL","API_KEY","fetchGetTranding","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","params","_yield$axios$get","data","_context","prev","next","api_key","page","axios","concat","sent","abrupt","results","stop","apply","arguments","fetchSearchMovie","_ref2","_callee2","query","_yield$axios$get2","_context2","filter","movie","title","toLowerCase","includes","_x","fetchMovieId","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchCast","_ref4","_callee4","_yield$axios$get4","_context4","language","t0","console","error","message","_x3","fetchReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","require","_require2","useState","useRef","useEffect","_require3","useLocation","useParams","Link","Outlet","MovieDetails","_location$state$from","_location$state","_useState","_useState2","_slicedToArray","setMovie","location","linkRef","state","from","then","catch","log","release","Date","release_date","getFullYear","genres","_jsxs","children","_jsx","className","to","current","src","poster_path","alt","status","average","vote_average","Math","round","toFixed","overview","map","genre","name","join"],"sourceRoot":""}