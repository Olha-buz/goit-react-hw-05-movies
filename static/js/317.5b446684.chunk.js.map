{"version":3,"file":"static/js/317.5b446684.chunk.js","mappings":"uOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAI3B,OAHKL,EAAS,CACXM,QAASZ,EACTa,KAAM,GACTJ,EAAAE,KAAA,EACsBZ,EAAAA,EAAAA,IAAU,sBAAuB,CAAEO,OAAAA,IAAU,KAAD,EAAvD,OAAuDC,EAAAE,EAAAK,KAA3DN,EAAID,EAAJC,KAAIC,EAAAM,OAAA,SACLP,EAAKQ,SAAO,wBAAAP,EAAAQ,OAAA,GAAAZ,EAAA,KACtB,kBAP4B,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAShBC,EAAgB,eAAAC,GAAAlB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkB,EAAMC,GAAK,IAAAjB,EAAAkB,EAAAhB,EAAA,OAAAJ,IAAAA,MAAA,SAAAqB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OAKtC,OAJKL,EAAS,CACXM,QAASZ,EACTa,KAAM,EACNU,MAAAA,GACHE,EAAAd,KAAA,EACsBZ,EAAAA,EAAAA,IAAU,gBAAiB,CAAEO,OAAAA,IAAU,KAAD,EAAjD,OAAiDkB,EAAAC,EAAAX,KAArDN,EAAIgB,EAAJhB,KAAIiB,EAAAV,OAAA,SACLP,EAAKQ,QAAQU,QAAO,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,cAAcC,SAASP,EAAMM,cAAc,KAAC,wBAAAJ,EAAAR,OAAA,GAAAK,EAAA,KAC/F,gBAR4BS,GAAA,OAAAV,EAAAH,MAAA,KAAAC,UAAA,I,oFCXhBa,EAAY,SAAH9B,GAAoB,IAAd+B,EAAM/B,EAAN+B,OAClBC,GAAWC,EAAAA,EAAAA,MACjB,OACIC,EAAAA,EAAAA,KAAA,MAAAC,SACKJ,EAAOK,OAAS,GAAKL,EAAOM,KAAI,SAAAlB,GAAoB,IAAjBmB,EAAEnB,EAAFmB,GAAIZ,EAAKP,EAALO,MACpC,OACIQ,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,GAAMI,MAAO,CAAEC,KAAMX,GAAWG,SAChDT,KAFAY,EAMjB,KAGZ,C,2GCHA,EAbe,WACX,OACIJ,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACU,EAAAA,GAAY,CACTC,MAAM,UACNC,MAAM,MACNC,SAAS,EACTC,UAAU,6BAI1B,E,kBCVaC,EAAa,SAAHjD,GAAuB,IAAjBkD,EAASlD,EAATkD,UACzBC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAWlC,OACII,EAAAA,EAAAA,MAAA,QAAMC,SAVW,SAAAC,GACjBA,EAAIC,iBACJV,EAAUK,EACd,EAOiCpB,SAAA,EACzBD,EAAAA,EAAAA,KAAA,SACI2B,KAAK,OACLC,MAAOP,EACPQ,YAAY,wBACZC,SAVS,SAAAL,GACjBH,EAAeG,EAAIM,OAAOH,MAAMI,OAAOvC,cAC3C,KASQO,EAAAA,EAAAA,KAAA,UAAQ2B,KAAK,SAAQ1B,SAAC,aAGlC,E,QC2BA,EA5Ce,WAAO,IAADgC,EACnBhB,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCpB,EAAMsB,EAAA,GAAEe,EAASf,EAAA,GACxBgB,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAjB,EAAAA,EAAAA,GAAAe,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA8BtB,EAAAA,EAAAA,WAAS,GAAMuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0B1B,EAAAA,EAAAA,WAAS,GAAM2B,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChB1D,EAAiC,QAA5B8C,EAAGK,EAAaU,IAAI,gBAAQ,IAAAf,EAAAA,EAAI,IAE3CgB,EAAAA,EAAAA,YAAU,WACM,KAAV9D,GAIJwD,GAAW,IACX3D,EAAAA,EAAAA,IAAiBG,GACd+D,MAAK,SAAAC,GACJjB,EAAUiB,GACVJ,EAAgC,IAAvBI,EAAYjD,OACvB,IACCkD,OAAM,SAAAN,GACLO,QAAQC,IAAIR,EAAMS,SAClBrB,EAAU,GACZ,IACCsB,SAAQ,WACPb,GAAW,EACb,KAfAT,EAAU,GAiBd,GAAG,CAAC/C,IAOJ,OACEoC,EAAAA,EAAAA,MAAA,OAAAtB,SAAA,EACED,EAAAA,EAAAA,KAACe,EAAU,CAACC,UAPE,SAAA7B,GAEhBoD,EADyB,KAAVpD,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAE7C,IAKKuD,IAAW1C,EAAAA,EAAAA,KAACyD,EAAM,IAClBX,IAAU9C,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iBACbd,GAASU,EAAOK,OAAS,IAAOF,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gBACrCJ,EAAOK,SAAUF,EAAAA,EAAAA,KAACJ,EAAAA,EAAS,CAACC,OAAQA,MAG3C,C","sources":["api/api.jsx","components/MovieList/MovieList.jsx","components/Loader/Loader.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3a86e3da3e452faa5b0083627dadb2c7';\n\nexport const fetchGetTranding = async () => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n    };\n    const { data } = await axios.get('/trending/movie/day', { params });\n    return data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n        query,\n    };\n    const { data } = await axios.get('/search/movie', { params });\n    return data.results.filter(movie => movie.title.toLowerCase().includes(query.toLowerCase()));\n};\n\nexport const fetchMovieId = async movieId => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n    };\n    const { data } = await axios.get(`/movie/${movieId}`, { params });\n    return data;\n};\n\nexport const fetchCast = async movieId => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n        language: 'en-US',\n    };\n    \n    try {\n        const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n        return data;\n    } catch (error) {\n        console.error(error.message);\n    }\n};\n\nexport const fetchReviews = async movieId => {\n    const params = {\n        api_key: API_KEY,\n        page: 1,\n        language: 'en-US',\n    };\n    const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n    return data.results;\n};\n","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <ul>\n            {movies.length > 0 && movies.map(({ id, title }) => {\n                return (\n                    <li key={id}>\n                        <Link to={`/movies/${id}`} state={{ from: location }}>\n                            {title}\n                        </Link>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};","import { FallingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <div>\n            <FallingLines\n                color=\"#4fa94d\"\n                width=\"100\"\n                visible={true}\n                ariaLabel=\"falling-circles-loading\"\n            />\n        </div>\n    )\n};\n\nexport default Loader;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ setParams }) => {\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const handleSumbit = evt => {\n        evt.prevenrDefault();\n        setParams(searchQuery);\n    }\n\n    const handleChange = evt => {\n        setSearchQuery(evt.target.value.trim().toLowerCase())\n    }\n\n    return (\n        <form onSubmit={handleSumbit} >\n            <input\n                type='text'\n                value={searchQuery}\n                placeholder=\"Enter movie to search\"\n                onChange={handleChange} />\n            <button type='submit'>Search</button>\n        </form>\n    )\n};\n\nSearchForm.propTypes = {\n\tsetParams: PropTypes.func.isRequired,\n}","import { fetchSearchMovie } from 'api/api';\nimport Loader from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      setMovies([]);\n      return;\n    }\n    setLoading(true);\n    fetchSearchMovie(query)\n      .then(searchMovie => {\n        setMovies(searchMovie);\n        setError(searchMovie.length === 0);\n      })\n      .catch(error => {\n        console.log(error.message)\n        setMovies([]);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n    \n  }, [query]);\n\n  const setParams = query => {\n    const params = query !== '' ? { query } : {};\n    setSearchParams(params);\n  };\n\n  return (\n    <div>\n      <SearchForm setParams={setParams} />\n      {loading && <Loader />}\n      {error && (<h2>Nothing find</h2>)}\n      {(query && movies.length > 0) && (<h2>Found movie</h2>)}\n      {movies.length && <MovieList movies={movies}/>}\n    </div>\n  )\n}\n\nexport default Movies;"],"names":["axios","API_KEY","fetchGetTranding","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","params","_yield$axios$get","data","_context","prev","next","api_key","page","sent","abrupt","results","stop","apply","arguments","fetchSearchMovie","_ref2","_callee2","query","_yield$axios$get2","_context2","filter","movie","title","toLowerCase","includes","_x","MovieList","movies","location","useLocation","_jsx","children","length","map","id","Link","to","concat","state","from","FallingLines","color","width","visible","ariaLabel","SearchForm","setParams","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_jsxs","onSubmit","evt","prevenrDefault","type","value","placeholder","onChange","target","trim","_searchParams$get","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","get","useEffect","then","searchMovie","catch","console","log","message","finally","Loader"],"sourceRoot":""}